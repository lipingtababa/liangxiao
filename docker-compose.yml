version: '3.8'

services:
  orchestrator:
    build:
      context: .
      target: development
    container_name: orchestrator-dev
    ports:
      - "8000:8000"
      - "5678:5678"  # debugpy port
    volumes:
      - .:/app
      - /app/.venv  # Exclude virtual environment
      - orchestrator-data:/app/data
      - orchestrator-logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - redis
      - postgres
    networks:
      - orchestrator-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: orchestrator-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - orchestrator-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: orchestrator-postgres
    environment:
      POSTGRES_DB: orchestrator
      POSTGRES_USER: orchestrator
      POSTGRES_PASSWORD: orchestrator_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - orchestrator-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orchestrator"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Optional: Database admin interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: orchestrator-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@orchestrator.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - orchestrator-network
    restart: unless-stopped
    profiles: ["admin"]  # Only start when explicitly requested

volumes:
  redis-data:
  postgres-data:
  pgadmin-data:
  orchestrator-data:
  orchestrator-logs:

networks:
  orchestrator-network:
    driver: bridge